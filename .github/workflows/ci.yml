name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Check Poetry Version
        run: |
          export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
          poetry --version

      - name: Install dependencies including dev
        run: |
          export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
          poetry install --with dev

      - name: Spellcheck
        run: |
          export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
          poetry run codespell ./app ./tests

      - name: Run Tests with Coverage
        run: |
          export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          poetry run pytest --cov=app --cov-report=xml --cov-report=term

      - name: Enforce Coverage Gate
        run: |
          export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
          COVERAGE=$(poetry run coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Coverage is $COVERAGE%"
          if (( $(echo "$COVERAGE < 95.0" | bc -l) )); then
            echo "Coverage below 95%! Failing pipeline."
            exit 1
          fi

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Docker Build
        run: docker build -t fastapi-azure-app .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D0C1A5DA3BD14CBBBD0E290374C83C70 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_163E26995DCA4EF38CEE24F367ECE934 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7553735F7720417097487F0E93ED9912 }}
          enable-AzPSSession: false
          allow-no-subscriptions: true

      - name: Deploy to Azure Function
        uses: Azure/functions-action@v1
        with:
          app-name: 'fastapifn'
          package: '.'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
