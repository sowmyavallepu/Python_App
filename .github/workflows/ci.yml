name: CI - Tests and Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'

jobs:
  test-and-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Disable shallow clone for better SonarQube analysis

    - name: Setup Python version
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry install --with dev

    - name: Code Quality - Spellcheck
      run: |
        poetry run codespell ./app ./tests || echo "Spellcheck completed with warnings"

    - name: Code Quality - Linting (optional)
      run: |
        poetry run flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Linting completed"

    - name: Run Tests with Coverage
      run: |
        poetry run pytest \
          --cov=app \
          --cov-report=xml:coverage.xml \
          --cov-report=term-missing \
          --cov-report=html:htmlcov \
          --junitxml=test-results.xml \
          --cov-fail-under=80 \
          tests/ -v

    - name: Verify Coverage Files
      run: |
        echo "=== Generated Coverage Files ==="
        ls -la *.xml || echo "No XML files found"
        echo ""
        echo "=== Coverage XML Content (first 15 lines) ==="
        head -15 coverage.xml || echo "coverage.xml not found"
        echo ""
        echo "=== Test Results XML Content (first 10 lines) ==="
        head -10 test-results.xml || echo "test-results.xml not found"

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          coverage.xml
          test-results.xml
          htmlcov/

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate Check
      uses: sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      continue-on-error: true  # Don't fail the workflow if quality gate fails

    - name: Display Quality Gate Result
      run: |
        echo "SonarQube analysis completed. Check the SonarQube dashboard for detailed results."
